{"ast":null,"code":"var _jsxFileName = \"D:\\\\HK3-N2\\\\ANTOANHETHONGWEB\\\\BT5\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authToken, setAuthToken] = useState(null); // Khởi tạo là null\n  const [userRole, setUserRole] = useState(null); // Khởi tạo là null\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Khởi tạo là false\n  const [isLoading, setIsLoading] = useState(true); // Bắt đầu là loading\n\n  // Hàm kiểm tra trạng thái ban đầu (không thay đổi nhiều)\n  const checkAuthStatus = useCallback(() => {\n    console.log('Auth Check: Starting...');\n    setIsLoading(true);\n    const token = localStorage.getItem('authToken');\n    const role = localStorage.getItem('userRole');\n    console.log('Auth Check - Storage Token:', token);\n    console.log('Auth Check - Storage Role:', role);\n    if (token && role) {\n      // TODO: Verify token với backend\n      setAuthToken(token);\n      setUserRole(role);\n      setIsAuthenticated(true);\n      console.log(`Auth Check - Status: Authenticated as ${role}`);\n    } else {\n      // Dọn dẹp nếu thiếu thông tin\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      setAuthToken(null);\n      setUserRole(null);\n      setIsAuthenticated(false);\n      console.log('Auth Check - Status: Not Authenticated');\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    checkAuthStatus();\n  }, [checkAuthStatus]);\n\n  // --- Hàm Login (Điểm Cần Kiểm Tra Kỹ) ---\n  const login = useCallback(loginData => {\n    console.log('AuthContext: login function called with data:', loginData); // Log 1: Xem dữ liệu nhận được\n\n    // Kiểm tra xem loginData có phải object hợp lệ và có chứa token + role_name không\n    if (loginData && typeof loginData === 'object' && loginData.token && loginData.role_name) {\n      const token = loginData.token;\n      const roleName = loginData.role_name; // Lấy role_name\n\n      console.log(`AuthContext: Data is valid. Token: [${token ? 'Exists' : 'Missing'}], Role: [${roleName}]`); // Log 2: Xác nhận dữ liệu hợp lệ\n\n      try {\n        localStorage.setItem('authToken', token);\n        localStorage.setItem('userRole', roleName); // Lưu role vào storage\n        console.log('AuthContext: Saved to localStorage.'); // Log 3: Xác nhận đã lưu\n\n        setAuthToken(token);\n        setUserRole(roleName); // Cập nhật state role\n        setIsAuthenticated(true); // <<< Cập nhật trạng thái đăng nhập\n        console.log(`AuthContext: State updated. Logged in as ${roleName}. IsAuthenticated: ${true}`); // Log 4: Xác nhận state đã cập nhật\n      } catch (error) {\n        console.error(\"AuthContext: Error during login state/storage update:\", error);\n        // Nếu có lỗi khi lưu storage hoặc set state, thực hiện logout để đảm bảo an toàn\n        logout();\n      }\n    } else {\n      // Nếu dữ liệu không hợp lệ (thiếu token hoặc role_name)\n      console.error(\"AuthContext: Invalid or incomplete login data received. Logging out.\", loginData); // Log 5: Báo lỗi dữ liệu\n      // Gọi logout để đảm bảo trạng thái ứng dụng nhất quán (không đăng nhập)\n      logout(); // Quan trọng: Ngăn chặn trạng thái đăng nhập nửa vời\n    }\n  }, []); // Tạm thời không cần dependency logout ở đây nếu nó được định nghĩa trong cùng scope\n\n  // Hàm Logout (Không thay đổi)\n  const logout = useCallback(() => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userRole');\n    setAuthToken(null);\n    setUserRole(null);\n    setIsAuthenticated(false); // Đảm bảo set về false\n    console.log(\"AuthContext: Logged out.\");\n  }, []);\n\n  // Giá trị cung cấp (Không thay đổi)\n  const value = {\n    authToken,\n    isAuthenticated,\n    isLoading,\n    userRole,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook không đổi\n_s(AuthProvider, \"55QR4giP96DdHCAbmj4o7IW9Uiw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useCallback","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authToken","setAuthToken","userRole","setUserRole","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","checkAuthStatus","console","log","token","localStorage","getItem","role","removeItem","login","loginData","role_name","roleName","setItem","error","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","undefined","Error","$RefreshReg$"],"sources":["D:/HK3-N2/ANTOANHETHONGWEB/BT5/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext, useCallback } from 'react';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authToken, setAuthToken] = useState(null); // Khởi tạo là null\r\n  const [userRole, setUserRole] = useState(null);  // Khởi tạo là null\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Khởi tạo là false\r\n  const [isLoading, setIsLoading] = useState(true); // Bắt đầu là loading\r\n\r\n  // Hàm kiểm tra trạng thái ban đầu (không thay đổi nhiều)\r\n  const checkAuthStatus = useCallback(() => {\r\n    console.log('Auth Check: Starting...');\r\n    setIsLoading(true);\r\n    const token = localStorage.getItem('authToken');\r\n    const role = localStorage.getItem('userRole');\r\n    console.log('Auth Check - Storage Token:', token);\r\n    console.log('Auth Check - Storage Role:', role);\r\n\r\n    if (token && role) {\r\n      // TODO: Verify token với backend\r\n      setAuthToken(token);\r\n      setUserRole(role);\r\n      setIsAuthenticated(true);\r\n      console.log(`Auth Check - Status: Authenticated as ${role}`);\r\n    } else {\r\n      // Dọn dẹp nếu thiếu thông tin\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('userRole');\r\n      setAuthToken(null);\r\n      setUserRole(null);\r\n      setIsAuthenticated(false);\r\n      console.log('Auth Check - Status: Not Authenticated');\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, [checkAuthStatus]);\r\n\r\n  // --- Hàm Login (Điểm Cần Kiểm Tra Kỹ) ---\r\n  const login = useCallback((loginData) => {\r\n    console.log('AuthContext: login function called with data:', loginData); // Log 1: Xem dữ liệu nhận được\r\n\r\n    // Kiểm tra xem loginData có phải object hợp lệ và có chứa token + role_name không\r\n    if (loginData && typeof loginData === 'object' && loginData.token && loginData.role_name) {\r\n      const token = loginData.token;\r\n      const roleName = loginData.role_name; // Lấy role_name\r\n\r\n      console.log(`AuthContext: Data is valid. Token: [${token ? 'Exists' : 'Missing'}], Role: [${roleName}]`); // Log 2: Xác nhận dữ liệu hợp lệ\r\n\r\n      try {\r\n        localStorage.setItem('authToken', token);\r\n        localStorage.setItem('userRole', roleName); // Lưu role vào storage\r\n        console.log('AuthContext: Saved to localStorage.'); // Log 3: Xác nhận đã lưu\r\n\r\n        setAuthToken(token);\r\n        setUserRole(roleName); // Cập nhật state role\r\n        setIsAuthenticated(true); // <<< Cập nhật trạng thái đăng nhập\r\n        console.log(`AuthContext: State updated. Logged in as ${roleName}. IsAuthenticated: ${true}`); // Log 4: Xác nhận state đã cập nhật\r\n      } catch (error) {\r\n          console.error(\"AuthContext: Error during login state/storage update:\", error);\r\n          // Nếu có lỗi khi lưu storage hoặc set state, thực hiện logout để đảm bảo an toàn\r\n          logout();\r\n      }\r\n\r\n    } else {\r\n      // Nếu dữ liệu không hợp lệ (thiếu token hoặc role_name)\r\n      console.error(\"AuthContext: Invalid or incomplete login data received. Logging out.\", loginData); // Log 5: Báo lỗi dữ liệu\r\n      // Gọi logout để đảm bảo trạng thái ứng dụng nhất quán (không đăng nhập)\r\n      logout(); // Quan trọng: Ngăn chặn trạng thái đăng nhập nửa vời\r\n    }\r\n  }, []); // Tạm thời không cần dependency logout ở đây nếu nó được định nghĩa trong cùng scope\r\n\r\n  // Hàm Logout (Không thay đổi)\r\n  const logout = useCallback(() => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('userRole');\r\n    setAuthToken(null);\r\n    setUserRole(null);\r\n    setIsAuthenticated(false); // Đảm bảo set về false\r\n    console.log(\"AuthContext: Logged out.\");\r\n  }, []);\r\n\r\n  // Giá trị cung cấp (Không thay đổi)\r\n  const value = { authToken, isAuthenticated, isLoading, userRole, login, logout };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook không đổi\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}