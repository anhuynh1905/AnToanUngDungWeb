{"ast":null,"code":"var _jsxFileName = \"D:\\\\HK3-N2\\\\ANTOANHETHONGWEB\\\\BT5\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n// Optional: Import hàm gọi API để verify token nếu có\n// import apiClient from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authToken, setAuthToken] = useState(localStorage.getItem('authToken'));\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('authToken'));\n  const [isLoading, setIsLoading] = useState(true); // Thêm trạng thái loading\n\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      console.log(\"AuthContext: Token found, assuming authenticated.\");\n      setIsAuthenticated(true);\n      setAuthToken(token);\n      setIsLoading(false);\n    } else {\n      console.log(\"AuthContext: No token found.\");\n      setIsAuthenticated(false);\n      setAuthToken(null);\n      setIsLoading(false); // Hoàn thành kiểm tra\n    }\n  }, []); // Chỉ chạy 1 lần khi provider mount\n\n  const login = token => {\n    localStorage.setItem('authToken', token);\n    setAuthToken(token);\n    setIsAuthenticated(true);\n    console.log(\"AuthContext: Logged in.\");\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    setAuthToken(null);\n    setIsAuthenticated(false);\n    console.log(\"AuthContext: Logged out.\");\n    // Không cần navigate ở đây, việc này nên được xử lý bởi component gọi logout hoặc ProtectedRoute\n  };\n\n  // Cung cấp giá trị context, bao gồm cả isLoading\n  const value = {\n    authToken,\n    isAuthenticated,\n    isLoading,\n    login,\n    logout\n  };\n\n  // Chỉ render children khi không còn loading\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook để sử dụng AuthContext dễ dàng hơn\n_s(AuthProvider, \"FF0ASlgZuIRUSIZYtz+DPgzwlXg=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authToken","setAuthToken","localStorage","getItem","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","token","console","log","login","setItem","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","undefined","Error","$RefreshReg$"],"sources":["D:/HK3-N2/ANTOANHETHONGWEB/BT5/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n// Optional: Import hàm gọi API để verify token nếu có\r\n// import apiClient from '../services/api';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authToken, setAuthToken] = useState(localStorage.getItem('authToken'));\r\n  const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem('authToken'));\r\n  const [isLoading, setIsLoading] = useState(true); // Thêm trạng thái loading\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      console.log(\"AuthContext: Token found, assuming authenticated.\");\r\n      setIsAuthenticated(true);\r\n      setAuthToken(token);\r\n      setIsLoading(false);\r\n    } else {\r\n      console.log(\"AuthContext: No token found.\");\r\n      setIsAuthenticated(false);\r\n      setAuthToken(null);\r\n      setIsLoading(false); // Hoàn thành kiểm tra\r\n    }\r\n  }, []); // Chỉ chạy 1 lần khi provider mount\r\n\r\n  const login = (token) => {\r\n    localStorage.setItem('authToken', token);\r\n    setAuthToken(token);\r\n    setIsAuthenticated(true);\r\n    console.log(\"AuthContext: Logged in.\");\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    setAuthToken(null);\r\n    setIsAuthenticated(false);\r\n    console.log(\"AuthContext: Logged out.\");\r\n    // Không cần navigate ở đây, việc này nên được xử lý bởi component gọi logout hoặc ProtectedRoute\r\n  };\r\n\r\n  // Cung cấp giá trị context, bao gồm cả isLoading\r\n  const value = { authToken, isAuthenticated, isLoading, login, logout };\r\n\r\n  // Chỉ render children khi không còn loading\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook để sử dụng AuthContext dễ dàng hơn\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;EAC7E,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAACW,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;EAC3F,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMgB,KAAK,GAAGN,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIK,KAAK,EAAE;MACTC,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;MAChEL,kBAAkB,CAAC,IAAI,CAAC;MACxBJ,YAAY,CAACO,KAAK,CAAC;MACnBD,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACLE,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CL,kBAAkB,CAAC,KAAK,CAAC;MACzBJ,YAAY,CAAC,IAAI,CAAC;MAClBM,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMI,KAAK,GAAIH,KAAK,IAAK;IACvBN,YAAY,CAACU,OAAO,CAAC,WAAW,EAAEJ,KAAK,CAAC;IACxCP,YAAY,CAACO,KAAK,CAAC;IACnBH,kBAAkB,CAAC,IAAI,CAAC;IACxBI,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACxC,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBX,YAAY,CAACY,UAAU,CAAC,WAAW,CAAC;IACpCb,YAAY,CAAC,IAAI,CAAC;IAClBI,kBAAkB,CAAC,KAAK,CAAC;IACzBI,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC;EACF,CAAC;;EAED;EACA,MAAMK,KAAK,GAAG;IAAEf,SAAS;IAAEI,eAAe;IAAEE,SAAS;IAAEK,KAAK;IAAEE;EAAO,CAAC;;EAEtE;EACA,oBACElB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjB,QAAA,EAChCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAArB,EAAA,CA9CaF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA+CzB,OAAO,MAAMyB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG/B,UAAU,CAACG,WAAW,CAAC;EACvC,IAAI4B,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOF,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}