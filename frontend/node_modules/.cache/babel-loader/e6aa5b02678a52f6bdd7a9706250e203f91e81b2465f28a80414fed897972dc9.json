{"ast":null,"code":"var _jsxFileName = \"D:\\\\HK3-N2\\\\ANTOANHETHONGWEB\\\\BT5\\\\frontend\\\\src\\\\pages\\\\BookListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react'; // Thêm useCallback\nimport { getBooks } from '../services/api';\nimport { useAuth } from '../contexts/AuthContext';\n\n// Nhận props từ App.js (nếu có, ví dụ: cho chức năng chọn sách mượn)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookListPage({\n  borrowSelection = [],\n  onSelectBook = () => {}\n}) {\n  _s();\n  // Cung cấp giá trị mặc định\n  const [allBooks, setAllBooks] = useState([]); // Lưu trữ tất cả sách từ API\n  const [loading, setLoading] = useState(true); // Trạng thái loading ban đầu\n  const [error, setError] = useState(''); // Thông báo lỗi\n  const {\n    logout\n  } = useAuth(); // Lấy hàm logout\n\n  // State cho chức năng tìm kiếm\n  const [searchQuery, setSearchQuery] = useState(''); // Nội dung ô tìm kiếm\n\n  // --- Hàm Fetch Sách ---\n  // Sử dụng useCallback để tránh tạo lại hàm không cần thiết\n  const fetchBooks = useCallback(async () => {\n    console.log(\"BookListPage: Fetching books...\");\n    setLoading(true); // Bắt đầu loading\n    setError(''); // Xóa lỗi cũ\n    try {\n      const response = await getBooks();\n      console.log(\"BookListPage: API Response Data:\", response.data); // LOG: Xem dữ liệu thô\n\n      // Kiểm tra dữ liệu trả về có phải là mảng không\n      if (Array.isArray(response.data)) {\n        setAllBooks(response.data); // Cập nhật state với danh sách sách\n        console.log(\"BookListPage: State 'allBooks' updated with\", response.data.length, \"items.\");\n      } else {\n        // Nếu API không trả về mảng\n        console.error(\"BookListPage: API did not return an array:\", response.data);\n        setAllBooks([]); // Đặt thành mảng rỗng\n        setError(\"Received invalid data format from the server.\");\n      }\n    } catch (err) {\n      console.error(\"BookListPage: Failed to fetch books:\", err);\n      setAllBooks([]); // Đặt thành mảng rỗng khi có lỗi\n\n      // Xử lý lỗi xác thực hoặc lỗi mạng/server\n      if (err.response && (err.response.status === 401 || err.response.status === 403)) {\n        setError('Your session may have expired or access denied. Please log in again.');\n        // Cân nhắc tự động logout hoặc chuyển hướng\n        // setTimeout(logout, 3000);\n      } else {\n        setError('Failed to load books. Please try refreshing the page.');\n      }\n    } finally {\n      setLoading(false); // <<< Luôn kết thúc loading\n      console.log(\"BookListPage: Fetching books finished. Loading:\", false);\n    }\n  }, [logout]); // logout là dependency của useCallback này\n\n  // Gọi fetchBooks khi component được mount lần đầu\n  useEffect(() => {\n    fetchBooks();\n  }, [fetchBooks]); // Dependency là hàm fetchBooks đã được bọc bởi useCallback\n\n  // --- Hàm Xử lý Input Tìm kiếm ---\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  // --- Logic Lọc Sách (Client-side) ---\n  // Sử dụng useMemo để tối ưu, chỉ tính toán lại khi cần\n  const filteredBooks = useMemo(() => {\n    // Log khi bắt đầu lọc\n    // console.log(\"Filtering books. Query:\", searchQuery, \"Total books:\", allBooks.length);\n\n    if (!searchQuery) {\n      return allBooks; // Trả về tất cả nếu không tìm kiếm\n    }\n    const lowerCaseQuery = searchQuery.toLowerCase().trim(); // Chuẩn hóa query\n    if (!lowerCaseQuery) return allBooks; // Trả về tất cả nếu query chỉ là khoảng trắng\n\n    const results = allBooks.filter(book => book.title && book.title.toLowerCase().includes(lowerCaseQuery) || book.author && book.author.toLowerCase().includes(lowerCaseQuery) || book.isbn && book.isbn.includes(lowerCaseQuery) // Tìm cả theo ISBN nếu muốn\n    );\n    // console.log(\"Filtering results:\", results.length);\n    return results;\n  }, [allBooks, searchQuery]); // Dependencies là danh sách sách gốc và query\n\n  // --- Hàm kiểm tra sách đã được chọn để mượn chưa ---\n  const isBookSelected = useCallback(bookId => {\n    // Kiểm tra xem borrowSelection có tồn tại và là mảng không trước khi dùng .some\n    return Array.isArray(borrowSelection) && borrowSelection.some(item => item.id === bookId);\n  }, [borrowSelection]); // Phụ thuộc vào borrowSelection\n\n  // --- Log trạng thái trước khi render ---\n  console.log(`BookListPage Rendering - Loading: ${loading}, Error: ${error ? `\"${error}\"` : 'None'}, Filtered Books: ${filteredBooks === null || filteredBooks === void 0 ? void 0 : filteredBooks.length}, All Books: ${allBooks === null || allBooks === void 0 ? void 0 : allBooks.length}`);\n\n  // --- UI Rendering ---\n\n  // Trường hợp 1: Đang loading\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading books... Please wait.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 14\n    }, this);\n  }\n\n  // Trường hợp 2: Có lỗi xảy ra khi fetch\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchBooks,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this);\n  }\n\n  // Trường hợp 3: Render bình thường\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title, author, or ISBN...\",\n        value: searchQuery,\n        onChange: handleSearchChange,\n        style: {\n          padding: '10px',\n          width: 'calc(100% - 22px)',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          fontSize: '1em'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), Array.isArray(filteredBooks) && filteredBooks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredBooks.map(book => {\n        // console.log(\"Mapping book:\", book.id); // Log để xem có đang map không\n        const isSelected = isBookSelected(book.id);\n        const isOutOfStock = book.quantity <= 0;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            gap: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"book-info\",\n            style: {\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: book.title || 'No Title'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), \" by \", book.author || 'N/A', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"ISBN: \", book.isbn || 'N/A', \" | Qty: \", book.quantity, \" | Category: \", book.category_name || 'N/A', \" | Price: \", book.price != null ? `$${Number(book.price).toFixed(2)}` : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"book-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                console.log(\"Select Book button clicked for:\", book.id);\n                onSelectBook(book); // Gọi hàm được truyền từ App.js\n              }\n              // Disable nếu đã chọn HOẶC hết hàng\n              ,\n              disabled: isSelected || isOutOfStock,\n              title: isOutOfStock ? \"This book is out of stock\" : isSelected ? \"Book already in your selection\" : \"Select this book for borrowing\"\n              // Thay đổi class hoặc style nếu cần dựa trên trạng thái\n              ,\n              className: isSelected ? 'secondary' : isOutOfStock ? 'disabled-stock' : '',\n              children: isSelected ? 'Selected' : isOutOfStock ? 'Out of Stock' : 'Select Book'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)]\n        }, book.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Thông báo nếu không có sách nào (hoặc không khớp tìm kiếm)\n    _jsxDEV(\"p\", {\n      children: searchQuery ? `No books found matching \"${searchQuery}\". Try a different search term.` : \"No books are currently available in the library.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n            .book-actions button {\n                padding: 5px 10px;\n                font-size: 0.9em;\n                white-space: nowrap; /* Ngăn nút bị xuống dòng */\n            }\n            button.disabled-stock { /* Style cho nút khi hết hàng */\n                 background-color: #eee;\n                 color: #999;\n                 cursor: not-allowed;\n                 border: 1px solid #ddd;\n            }\n            /* Thêm style khác nếu cần */\n       `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(BookListPage, \"DwsngXvIWLBXw1E21aM9Vj8aACk=\", false, function () {\n  return [useAuth];\n});\n_c = BookListPage;\nexport default BookListPage;\nvar _c;\n$RefreshReg$(_c, \"BookListPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","getBooks","useAuth","jsxDEV","_jsxDEV","BookListPage","borrowSelection","onSelectBook","_s","allBooks","setAllBooks","loading","setLoading","error","setError","logout","searchQuery","setSearchQuery","fetchBooks","console","log","response","data","Array","isArray","length","err","status","handleSearchChange","event","target","value","filteredBooks","lowerCaseQuery","toLowerCase","trim","results","filter","book","title","includes","author","isbn","isBookSelected","bookId","some","item","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginBottom","type","placeholder","onChange","padding","width","border","borderRadius","fontSize","map","isSelected","isOutOfStock","quantity","display","alignItems","justifyContent","gap","flexGrow","category_name","price","Number","toFixed","disabled","jsx","_c","$RefreshReg$"],"sources":["D:/HK3-N2/ANTOANHETHONGWEB/BT5/frontend/src/pages/BookListPage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react'; // Thêm useCallback\r\nimport { getBooks } from '../services/api';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\n// Nhận props từ App.js (nếu có, ví dụ: cho chức năng chọn sách mượn)\r\nfunction BookListPage({ borrowSelection = [], onSelectBook = () => {} }) { // Cung cấp giá trị mặc định\r\n  const [allBooks, setAllBooks] = useState([]); // Lưu trữ tất cả sách từ API\r\n  const [loading, setLoading] = useState(true); // Trạng thái loading ban đầu\r\n  const [error, setError] = useState('');     // Thông báo lỗi\r\n  const { logout } = useAuth();               // Lấy hàm logout\r\n\r\n  // State cho chức năng tìm kiếm\r\n  const [searchQuery, setSearchQuery] = useState(''); // Nội dung ô tìm kiếm\r\n\r\n  // --- Hàm Fetch Sách ---\r\n  // Sử dụng useCallback để tránh tạo lại hàm không cần thiết\r\n  const fetchBooks = useCallback(async () => {\r\n    console.log(\"BookListPage: Fetching books...\");\r\n    setLoading(true); // Bắt đầu loading\r\n    setError('');     // Xóa lỗi cũ\r\n    try {\r\n      const response = await getBooks();\r\n      console.log(\"BookListPage: API Response Data:\", response.data); // LOG: Xem dữ liệu thô\r\n\r\n      // Kiểm tra dữ liệu trả về có phải là mảng không\r\n      if (Array.isArray(response.data)) {\r\n        setAllBooks(response.data); // Cập nhật state với danh sách sách\r\n        console.log(\"BookListPage: State 'allBooks' updated with\", response.data.length, \"items.\");\r\n      } else {\r\n        // Nếu API không trả về mảng\r\n        console.error(\"BookListPage: API did not return an array:\", response.data);\r\n        setAllBooks([]); // Đặt thành mảng rỗng\r\n        setError(\"Received invalid data format from the server.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"BookListPage: Failed to fetch books:\", err);\r\n      setAllBooks([]); // Đặt thành mảng rỗng khi có lỗi\r\n\r\n      // Xử lý lỗi xác thực hoặc lỗi mạng/server\r\n      if (err.response && (err.response.status === 401 || err.response.status === 403)) {\r\n        setError('Your session may have expired or access denied. Please log in again.');\r\n        // Cân nhắc tự động logout hoặc chuyển hướng\r\n        // setTimeout(logout, 3000);\r\n      } else {\r\n        setError('Failed to load books. Please try refreshing the page.');\r\n      }\r\n    } finally {\r\n      setLoading(false); // <<< Luôn kết thúc loading\r\n      console.log(\"BookListPage: Fetching books finished. Loading:\", false);\r\n    }\r\n  }, [logout]); // logout là dependency của useCallback này\r\n\r\n  // Gọi fetchBooks khi component được mount lần đầu\r\n  useEffect(() => {\r\n    fetchBooks();\r\n  }, [fetchBooks]); // Dependency là hàm fetchBooks đã được bọc bởi useCallback\r\n\r\n  // --- Hàm Xử lý Input Tìm kiếm ---\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  // --- Logic Lọc Sách (Client-side) ---\r\n  // Sử dụng useMemo để tối ưu, chỉ tính toán lại khi cần\r\n  const filteredBooks = useMemo(() => {\r\n    // Log khi bắt đầu lọc\r\n    // console.log(\"Filtering books. Query:\", searchQuery, \"Total books:\", allBooks.length);\r\n\r\n    if (!searchQuery) {\r\n      return allBooks; // Trả về tất cả nếu không tìm kiếm\r\n    }\r\n    const lowerCaseQuery = searchQuery.toLowerCase().trim(); // Chuẩn hóa query\r\n    if (!lowerCaseQuery) return allBooks; // Trả về tất cả nếu query chỉ là khoảng trắng\r\n\r\n    const results = allBooks.filter(book =>\r\n      (book.title && book.title.toLowerCase().includes(lowerCaseQuery)) ||\r\n      (book.author && book.author.toLowerCase().includes(lowerCaseQuery)) ||\r\n      (book.isbn && book.isbn.includes(lowerCaseQuery)) // Tìm cả theo ISBN nếu muốn\r\n    );\r\n    // console.log(\"Filtering results:\", results.length);\r\n    return results;\r\n  }, [allBooks, searchQuery]); // Dependencies là danh sách sách gốc và query\r\n\r\n  // --- Hàm kiểm tra sách đã được chọn để mượn chưa ---\r\n  const isBookSelected = useCallback((bookId) => {\r\n      // Kiểm tra xem borrowSelection có tồn tại và là mảng không trước khi dùng .some\r\n      return Array.isArray(borrowSelection) && borrowSelection.some(item => item.id === bookId);\r\n  }, [borrowSelection]); // Phụ thuộc vào borrowSelection\r\n\r\n\r\n  // --- Log trạng thái trước khi render ---\r\n  console.log(`BookListPage Rendering - Loading: ${loading}, Error: ${error ? `\"${error}\"` : 'None'}, Filtered Books: ${filteredBooks?.length}, All Books: ${allBooks?.length}`);\r\n\r\n\r\n  // --- UI Rendering ---\r\n\r\n  // Trường hợp 1: Đang loading\r\n  if (loading) {\r\n      return <div className=\"loading\">Loading books... Please wait.</div>;\r\n  }\r\n\r\n  // Trường hợp 2: Có lỗi xảy ra khi fetch\r\n  if (error) {\r\n      return (\r\n          <div className=\"container\">\r\n              <h2>Available Books</h2>\r\n              <p className=\"error-message\">{error}</p>\r\n              <button onClick={fetchBooks}>Try Again</button> {/* Nút thử lại */}\r\n          </div>\r\n       );\r\n   }\r\n\r\n  // Trường hợp 3: Render bình thường\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Available Books</h2>\r\n\r\n      {/* --- Thanh Tìm kiếm --- */}\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by title, author, or ISBN...\"\r\n          value={searchQuery}\r\n          onChange={handleSearchChange}\r\n          style={{ padding: '10px', width: 'calc(100% - 22px)', border: '1px solid #ccc', borderRadius: '4px', fontSize: '1em' }}\r\n        />\r\n      </div>\r\n\r\n      {/* --- Danh sách Sách (đã lọc) --- */}\r\n      {/* Kiểm tra filteredBooks có phải là mảng và có phần tử không */}\r\n      {Array.isArray(filteredBooks) && filteredBooks.length > 0 ? (\r\n        <ul>\r\n          {/* Lặp qua danh sách đã lọc */}\r\n          {filteredBooks.map((book) => {\r\n            // console.log(\"Mapping book:\", book.id); // Log để xem có đang map không\r\n            const isSelected = isBookSelected(book.id);\r\n            const isOutOfStock = book.quantity <= 0;\r\n            return (\r\n              <li key={book.id} style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', gap: '10px' }}>\r\n                {/* Thông tin sách */}\r\n                <div className=\"book-info\" style={{ flexGrow: 1 }}>\r\n                  <strong>{book.title || 'No Title'}</strong> by {book.author || 'N/A'}\r\n                  <br/>\r\n                  <small>\r\n                    ISBN: {book.isbn || 'N/A'} |\r\n                    Qty: {book.quantity} |\r\n                    Category: {book.category_name || 'N/A'} |\r\n                    Price: {book.price != null ? `$${Number(book.price).toFixed(2)}` : 'N/A'}\r\n                  </small>\r\n                </div>\r\n\r\n                {/* Nút Chọn Sách để Mượn */}\r\n                <div className=\"book-actions\">\r\n                  <button\r\n                      onClick={() => {\r\n                          console.log(\"Select Book button clicked for:\", book.id);\r\n                          onSelectBook(book); // Gọi hàm được truyền từ App.js\r\n                      }}\r\n                      // Disable nếu đã chọn HOẶC hết hàng\r\n                      disabled={isSelected || isOutOfStock}\r\n                      title={isOutOfStock ? \"This book is out of stock\" : (isSelected ? \"Book already in your selection\" : \"Select this book for borrowing\")}\r\n                      // Thay đổi class hoặc style nếu cần dựa trên trạng thái\r\n                      className={isSelected ? 'secondary' : (isOutOfStock ? 'disabled-stock' : '')}\r\n                  >\r\n                      {isSelected ? 'Selected' : (isOutOfStock ? 'Out of Stock' : 'Select Book')}\r\n                  </button>\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        // Thông báo nếu không có sách nào (hoặc không khớp tìm kiếm)\r\n        <p>\r\n          {searchQuery\r\n            ? `No books found matching \"${searchQuery}\". Try a different search term.`\r\n            : \"No books are currently available in the library.\"}\r\n        </p>\r\n      )}\r\n\r\n      {/* CSS cục bộ nếu cần */}\r\n      <style jsx>{`\r\n            .book-actions button {\r\n                padding: 5px 10px;\r\n                font-size: 0.9em;\r\n                white-space: nowrap; /* Ngăn nút bị xuống dòng */\r\n            }\r\n            button.disabled-stock { /* Style cho nút khi hết hàng */\r\n                 background-color: #eee;\r\n                 color: #999;\r\n                 cursor: not-allowed;\r\n                 border: 1px solid #ddd;\r\n            }\r\n            /* Thêm style khác nếu cần */\r\n       `}</style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookListPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}