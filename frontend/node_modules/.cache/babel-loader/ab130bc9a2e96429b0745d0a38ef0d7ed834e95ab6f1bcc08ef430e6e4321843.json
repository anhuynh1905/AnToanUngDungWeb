{"ast":null,"code":"var _jsxFileName = \"D:\\\\HK3-N2\\\\ANTOANHETHONGWEB\\\\BT5\\\\frontend\\\\src\\\\components\\\\BookForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// Import API function để lấy categories (component này tự fetch)\nimport { getCategories } from '../services/api';\n\n/**\r\n * Component BookForm dùng để tạo hoặc chỉnh sửa thông tin sách.\r\n * Nó tự fetch danh sách categories để cung cấp gợi ý và xác thực tên category.\r\n *\r\n * Props:\r\n * - book: Object chứa dữ liệu sách cần chỉnh sửa (nếu là null hoặc undefined, form ở chế độ thêm mới).\r\n * - onSubmit: Hàm callback được gọi khi form được submit thành công với payload dữ liệu hợp lệ.\r\n * - onCancel: Hàm callback được gọi khi nhấn nút \"Cancel Edit\" (chỉ hiển thị ở chế độ edit).\r\n * - loading: Boolean cho biết trạng thái loading của việc submit form (từ component cha).\r\n * - error: String chứa thông báo lỗi từ lần submit API trước đó (từ component cha).\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookForm({\n  book,\n  onSubmit,\n  onCancel,\n  loading,\n  error: submissionError\n}) {\n  _s();\n  // --- State cho dữ liệu các trường trong form ---\n  const [formData, setFormData] = useState({\n    title: '',\n    author: '',\n    isbn: '',\n    publish_year: '',\n    publisher: '',\n    category_name: '',\n    // Sử dụng tên category để người dùng nhập liệu\n    description: '',\n    quantity: 0,\n    price: 0.00\n  });\n\n  // State cho lỗi validation riêng của form này (ví dụ: category không tồn tại)\n  const [formValidationError, setFormValidationError] = useState('');\n\n  // --- State và Logic Fetch Categories bên trong BookForm ---\n  const [internalCategories, setInternalCategories] = useState([]); // Danh sách categories lấy từ API\n  const [categoryLoading, setCategoryLoading] = useState(true); // Trạng thái loading categories\n  const [categoryError, setCategoryError] = useState(''); // Lỗi khi fetch categories\n\n  // Sử dụng useEffect để fetch categories khi component mount lần đầu\n  useEffect(() => {\n    const fetchCategories = async () => {\n      console.log(\"BookForm: Fetching categories...\");\n      setCategoryLoading(true);\n      setCategoryError('');\n      try {\n        var _response$data;\n        const response = await getCategories();\n        setInternalCategories(response.data || []); // Lưu vào state nội bộ\n        console.log(\"BookForm: Categories fetched successfully\", ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.length) || 0);\n      } catch (err) {\n        console.error(\"BookForm: Failed to fetch categories\", err);\n        setCategoryError(\"Error: Could not load category list.\");\n        // Có thể thêm xử lý lỗi xác thực nếu API /categories yêu cầu login\n      } finally {\n        setCategoryLoading(false); // Kết thúc loading\n      }\n    };\n    fetchCategories();\n  }, []); // Mảng dependency rỗng -> chạy 1 lần\n\n  // --- Effect để cập nhật form data khi 'book' hoặc 'internalCategories' thay đổi ---\n  // Dùng để điền dữ liệu khi vào chế độ Edit\n  useEffect(() => {\n    setFormValidationError(''); // Xóa lỗi validation cũ khi dữ liệu đầu vào thay đổi\n\n    // Chỉ thực hiện nếu không đang load categories VÀ danh sách categories đã có\n    // Hoặc khi đang ở chế độ thêm mới (!book)\n    if (!categoryLoading || !book) {\n      if (book) {\n        var _book$quantity, _book$price;\n        // Chế độ Edit\n        // Tìm category tương ứng trong danh sách đã fetch\n        const category = internalCategories.find(cat => cat.id === book.category_id);\n        console.log(`BookForm: Updating form for editing book ID ${book.id}. Found category:`, category);\n        setFormData({\n          title: book.title || '',\n          author: book.author || '',\n          isbn: book.isbn || '',\n          publish_year: book.publish_year || '',\n          publisher: book.publisher || '',\n          category_name: category ? category.name : '',\n          // <<< Đặt tên category nếu tìm thấy\n          description: book.description || '',\n          quantity: (_book$quantity = book.quantity) !== null && _book$quantity !== void 0 ? _book$quantity : 0,\n          // Xử lý null/undefined về 0\n          price: (_book$price = book.price) !== null && _book$price !== void 0 ? _book$price : 0.00 // Xử lý null/undefined về 0.00\n        });\n      } else {\n        // Chế độ Thêm mới\n        console.log(\"BookForm: Resetting form for adding new book.\");\n        // Reset form về trạng thái trống\n        setFormData({\n          title: '',\n          author: '',\n          isbn: '',\n          publish_year: '',\n          publisher: '',\n          category_name: '',\n          description: '',\n          quantity: 0,\n          price: 0.00\n        });\n      }\n    }\n  }, [book, internalCategories, categoryLoading]); // Dependencies: book, danh sách categories, trạng thái loading categories\n\n  // --- Hàm xử lý khi giá trị input thay đổi ---\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      // Chuyển đổi sang số nếu là type number, giữ lại chuỗi rỗng nếu người dùng xóa\n      [name]: type === 'number' ? value === '' ? '' : Number(value) : value\n    }));\n    // Xóa lỗi validation khi người dùng bắt đầu nhập lại\n    if (formValidationError) {\n      setFormValidationError('');\n    }\n  };\n\n  // --- Hàm xử lý khi form được submit ---\n  const handleSubmit = e => {\n    e.preventDefault(); // Ngăn chặn hành vi submit mặc định của form\n    setFormValidationError(''); // Xóa lỗi validation cũ\n    console.log(\"BookForm: Submit button clicked. Current formData:\", formData);\n\n    // --- Bước 1: Validation cơ bản phía Client ---\n    if (!formData.title || !formData.category_name || formData.quantity === '' || formData.price === '') {\n      setFormValidationError('Validation Error: Please fill in Title, Category Name, Quantity, and Price.');\n      console.error(\"BookForm Validation Failed: Missing required fields.\");\n      return; // Dừng lại\n    }\n    if (isNaN(formData.quantity) || formData.quantity < 0) {\n      setFormValidationError('Validation Error: Quantity must be a non-negative number.');\n      console.error(\"BookForm Validation Failed: Invalid quantity.\");\n      return;\n    }\n    if (isNaN(formData.price) || formData.price < 0) {\n      setFormValidationError('Validation Error: Price must be a non-negative number.');\n      console.error(\"BookForm Validation Failed: Invalid price.\");\n      return;\n    }\n    // Có thể thêm validation cho publish_year nếu muốn (vd: phải là số có 4 chữ số)\n\n    // --- Bước 2: Tìm ID của Category dựa trên Tên đã nhập ---\n    const categoryNameInput = formData.category_name.trim(); // Lấy tên category và loại bỏ khoảng trắng thừa\n    console.log(`BookForm: Searching for category ID for name \"${categoryNameInput}\"`);\n    // Tìm trong danh sách categories đã fetch (không phân biệt hoa thường)\n    const foundCategory = internalCategories.find(cat => cat.name.trim().toLowerCase() === categoryNameInput.toLowerCase());\n\n    // Nếu không tìm thấy category hợp lệ\n    if (!foundCategory) {\n      setFormValidationError(`Validation Error: Category \"${categoryNameInput}\" not found. Please select from suggestions or ensure the category exists.`);\n      console.error(\"BookForm Validation Failed: Category not found.\");\n      return; // Dừng submit\n    }\n\n    // Lấy ID nếu tìm thấy\n    const categoryId = foundCategory.id;\n    console.log(`BookForm: Found Category ID: ${categoryId}`);\n\n    // --- Bước 3: Chuẩn bị dữ liệu (Payload) để gửi lên API ---\n    // Tạo object mới chỉ chứa các trường mà API backend mong đợi\n    const payload = {\n      title: formData.title.trim(),\n      // Gửi dữ liệu đã trim\n      author: formData.author.trim() || null,\n      // Gửi null nếu trống\n      isbn: formData.isbn.trim() || null,\n      publish_year: formData.publish_year ? Number(formData.publish_year) : null,\n      // Đảm bảo là số hoặc null\n      publisher: formData.publisher.trim() || null,\n      category_id: categoryId,\n      // <<< Gửi category ID đã tìm được\n      description: formData.description.trim() || null,\n      quantity: Number(formData.quantity),\n      // Đảm bảo là số\n      price: Number(formData.price) // Đảm bảo là số\n    };\n    console.log('BookForm: Prepared payload for submission:', payload);\n\n    // --- Bước 4: Gọi hàm onSubmit được truyền từ component cha ---\n    // Truyền payload đã chuẩn bị cho component cha (BookManagementPage) xử lý việc gọi API\n    onSubmit(payload);\n  };\n\n  // --- Render JSX ---\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: '20px',\n      padding: '15px',\n      border: '1px solid #eee',\n      borderRadius: '5px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: book ? 'Edit Book Information' : 'Add New Book'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), formValidationError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: formValidationError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 37\n    }, this), submissionError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: submissionError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n        gap: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"book-title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"book-title\",\n          type: \"text\",\n          name: \"title\",\n          value: formData.title,\n          onChange: handleChange,\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"book-author\",\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"book-author\",\n          type: \"text\",\n          name: \"author\",\n          value: formData.author,\n          onChange: handleChange,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"book-category\",\n          children: \"Category Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"book-category\",\n          type: \"text\",\n          name: \"category_name\",\n          value: formData.category_name,\n          onChange: handleChange,\n          required: true\n          // Disable khi đang submit form HOẶC đang load categories\n          ,\n          disabled: loading || categoryLoading,\n          placeholder: \"Enter existing category name\",\n          list: \"category-suggestions\" // Liên kết với datalist gợi ý\n          ,\n          \"aria-describedby\": \"category-help\" // Mô tả trợ giúp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"category-suggestions\",\n          children: internalCategories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat.name\n          }, cat.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), categoryLoading && /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            display: 'block',\n            marginTop: '3px',\n            color: 'orange'\n          },\n          children: \" Loading categories...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 41\n        }, this), !categoryLoading && categoryError && /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            display: 'block',\n            marginTop: '3px',\n            color: 'red'\n          },\n          children: [\" \", categoryError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 59\n        }, this), !categoryLoading && !categoryError && internalCategories.length === 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n          style: {\n            display: 'block',\n            marginTop: '3px',\n            color: 'red'\n          },\n          children: \" No categories loaded.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 95\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          id: \"category-help\",\n          style: {\n            display: 'block',\n            marginTop: '3px',\n            color: '#555'\n          },\n          children: \"(Type to search, must match an existing category name)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"book-quantity\",\n          children: \"Quantity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"book-quantity\",\n          type: \"number\",\n          name: \"quantity\",\n          value: formData.quantity,\n          onChange: handleChange,\n          required: true,\n          min: \"0\",\n          step: \"1\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"book-price\",\n          children: \"Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"book-price\",\n          type: \"number\",\n          name: \"price\",\n          value: formData.price,\n          onChange: handleChange,\n          required: true,\n          min: \"0\",\n          step: \"0.01\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"book-isbn\",\n          children: \"ISBN:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"book-isbn\",\n          type: \"text\",\n          name: \"isbn\",\n          value: formData.isbn,\n          onChange: handleChange,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"book-publish-year\",\n          children: \"Publish Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"book-publish-year\",\n          type: \"number\",\n          name: \"publish_year\",\n          value: formData.publish_year,\n          onChange: handleChange,\n          placeholder: \"YYYY\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"book-publisher\",\n          children: \"Publisher:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"book-publisher\",\n          type: \"text\",\n          name: \"publisher\",\n          value: formData.publisher,\n          onChange: handleChange,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          gridColumn: '1 / -1'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"book-description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"book-description\",\n          name: \"description\",\n          value: formData.description,\n          onChange: handleChange,\n          rows: \"3\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading || categoryLoading || !!categoryError,\n        children: [\" \", loading ? 'Saving...' : book ? 'Update Book' : 'Add Book']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), book && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"secondary\",\n        onClick: onCancel // Gọi hàm onCancel từ props\n        ,\n        disabled: loading // Disable khi đang submit\n        ,\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Cancel Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n}\n_s(BookForm, \"FMpd4cv0U6wVRZjOOETI7WTa3T8=\");\n_c = BookForm;\nexport default BookForm;\nvar _c;\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"names":["React","useState","useEffect","getCategories","jsxDEV","_jsxDEV","BookForm","book","onSubmit","onCancel","loading","error","submissionError","_s","formData","setFormData","title","author","isbn","publish_year","publisher","category_name","description","quantity","price","formValidationError","setFormValidationError","internalCategories","setInternalCategories","categoryLoading","setCategoryLoading","categoryError","setCategoryError","fetchCategories","console","log","_response$data","response","data","length","err","_book$quantity","_book$price","category","find","cat","id","category_id","name","handleChange","e","value","type","target","prev","Number","handleSubmit","preventDefault","isNaN","categoryNameInput","trim","foundCategory","toLowerCase","categoryId","payload","style","marginBottom","padding","border","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","className","display","gridTemplateColumns","gap","htmlFor","onChange","required","disabled","placeholder","list","map","marginTop","color","min","step","gridColumn","rows","onClick","marginLeft","_c","$RefreshReg$"],"sources":["D:/HK3-N2/ANTOANHETHONGWEB/BT5/frontend/src/components/BookForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// Import API function để lấy categories (component này tự fetch)\r\nimport { getCategories } from '../services/api';\r\n\r\n/**\r\n * Component BookForm dùng để tạo hoặc chỉnh sửa thông tin sách.\r\n * Nó tự fetch danh sách categories để cung cấp gợi ý và xác thực tên category.\r\n *\r\n * Props:\r\n * - book: Object chứa dữ liệu sách cần chỉnh sửa (nếu là null hoặc undefined, form ở chế độ thêm mới).\r\n * - onSubmit: Hàm callback được gọi khi form được submit thành công với payload dữ liệu hợp lệ.\r\n * - onCancel: Hàm callback được gọi khi nhấn nút \"Cancel Edit\" (chỉ hiển thị ở chế độ edit).\r\n * - loading: Boolean cho biết trạng thái loading của việc submit form (từ component cha).\r\n * - error: String chứa thông báo lỗi từ lần submit API trước đó (từ component cha).\r\n */\r\nfunction BookForm({ book, onSubmit, onCancel, loading, error: submissionError }) {\r\n    // --- State cho dữ liệu các trường trong form ---\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        author: '',\r\n        isbn: '',\r\n        publish_year: '',\r\n        publisher: '',\r\n        category_name: '', // Sử dụng tên category để người dùng nhập liệu\r\n        description: '',\r\n        quantity: 0,\r\n        price: 0.00,\r\n    });\r\n\r\n    // State cho lỗi validation riêng của form này (ví dụ: category không tồn tại)\r\n    const [formValidationError, setFormValidationError] = useState('');\r\n\r\n    // --- State và Logic Fetch Categories bên trong BookForm ---\r\n    const [internalCategories, setInternalCategories] = useState([]); // Danh sách categories lấy từ API\r\n    const [categoryLoading, setCategoryLoading] = useState(true); // Trạng thái loading categories\r\n    const [categoryError, setCategoryError] = useState(''); // Lỗi khi fetch categories\r\n\r\n    // Sử dụng useEffect để fetch categories khi component mount lần đầu\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            console.log(\"BookForm: Fetching categories...\");\r\n            setCategoryLoading(true);\r\n            setCategoryError('');\r\n            try {\r\n                const response = await getCategories();\r\n                setInternalCategories(response.data || []); // Lưu vào state nội bộ\r\n                console.log(\"BookForm: Categories fetched successfully\", response.data?.length || 0);\r\n            } catch (err) {\r\n                console.error(\"BookForm: Failed to fetch categories\", err);\r\n                setCategoryError(\"Error: Could not load category list.\");\r\n                // Có thể thêm xử lý lỗi xác thực nếu API /categories yêu cầu login\r\n            } finally {\r\n                setCategoryLoading(false); // Kết thúc loading\r\n            }\r\n        };\r\n        fetchCategories();\r\n    }, []); // Mảng dependency rỗng -> chạy 1 lần\r\n\r\n    // --- Effect để cập nhật form data khi 'book' hoặc 'internalCategories' thay đổi ---\r\n    // Dùng để điền dữ liệu khi vào chế độ Edit\r\n    useEffect(() => {\r\n        setFormValidationError(''); // Xóa lỗi validation cũ khi dữ liệu đầu vào thay đổi\r\n\r\n        // Chỉ thực hiện nếu không đang load categories VÀ danh sách categories đã có\r\n        // Hoặc khi đang ở chế độ thêm mới (!book)\r\n        if (!categoryLoading || !book) {\r\n            if (book) { // Chế độ Edit\r\n                 // Tìm category tương ứng trong danh sách đã fetch\r\n                const category = internalCategories.find(cat => cat.id === book.category_id);\r\n                console.log(`BookForm: Updating form for editing book ID ${book.id}. Found category:`, category);\r\n                setFormData({\r\n                    title: book.title || '',\r\n                    author: book.author || '',\r\n                    isbn: book.isbn || '',\r\n                    publish_year: book.publish_year || '',\r\n                    publisher: book.publisher || '',\r\n                    category_name: category ? category.name : '', // <<< Đặt tên category nếu tìm thấy\r\n                    description: book.description || '',\r\n                    quantity: book.quantity ?? 0, // Xử lý null/undefined về 0\r\n                    price: book.price ?? 0.00,   // Xử lý null/undefined về 0.00\r\n                });\r\n            } else { // Chế độ Thêm mới\r\n                console.log(\"BookForm: Resetting form for adding new book.\");\r\n                // Reset form về trạng thái trống\r\n                setFormData({\r\n                    title: '', author: '', isbn: '', publish_year: '', publisher: '',\r\n                    category_name: '', description: '', quantity: 0, price: 0.00,\r\n                });\r\n            }\r\n        }\r\n    }, [book, internalCategories, categoryLoading]); // Dependencies: book, danh sách categories, trạng thái loading categories\r\n\r\n    // --- Hàm xử lý khi giá trị input thay đổi ---\r\n    const handleChange = (e) => {\r\n        const { name, value, type } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            // Chuyển đổi sang số nếu là type number, giữ lại chuỗi rỗng nếu người dùng xóa\r\n            [name]: type === 'number' ? (value === '' ? '' : Number(value)) : value\r\n        }));\r\n        // Xóa lỗi validation khi người dùng bắt đầu nhập lại\r\n        if (formValidationError) {\r\n            setFormValidationError('');\r\n        }\r\n    };\r\n\r\n    // --- Hàm xử lý khi form được submit ---\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // Ngăn chặn hành vi submit mặc định của form\r\n        setFormValidationError(''); // Xóa lỗi validation cũ\r\n        console.log(\"BookForm: Submit button clicked. Current formData:\", formData);\r\n\r\n        // --- Bước 1: Validation cơ bản phía Client ---\r\n        if (!formData.title || !formData.category_name || formData.quantity === '' || formData.price === '') {\r\n            setFormValidationError('Validation Error: Please fill in Title, Category Name, Quantity, and Price.');\r\n            console.error(\"BookForm Validation Failed: Missing required fields.\");\r\n            return; // Dừng lại\r\n        }\r\n         if (isNaN(formData.quantity) || formData.quantity < 0) {\r\n             setFormValidationError('Validation Error: Quantity must be a non-negative number.');\r\n              console.error(\"BookForm Validation Failed: Invalid quantity.\");\r\n             return;\r\n         }\r\n          if (isNaN(formData.price) || formData.price < 0) {\r\n             setFormValidationError('Validation Error: Price must be a non-negative number.');\r\n             console.error(\"BookForm Validation Failed: Invalid price.\");\r\n             return;\r\n         }\r\n        // Có thể thêm validation cho publish_year nếu muốn (vd: phải là số có 4 chữ số)\r\n\r\n        // --- Bước 2: Tìm ID của Category dựa trên Tên đã nhập ---\r\n        const categoryNameInput = formData.category_name.trim(); // Lấy tên category và loại bỏ khoảng trắng thừa\r\n        console.log(`BookForm: Searching for category ID for name \"${categoryNameInput}\"`);\r\n        // Tìm trong danh sách categories đã fetch (không phân biệt hoa thường)\r\n        const foundCategory = internalCategories.find(\r\n            cat => cat.name.trim().toLowerCase() === categoryNameInput.toLowerCase()\r\n        );\r\n\r\n        // Nếu không tìm thấy category hợp lệ\r\n        if (!foundCategory) {\r\n            setFormValidationError(`Validation Error: Category \"${categoryNameInput}\" not found. Please select from suggestions or ensure the category exists.`);\r\n             console.error(\"BookForm Validation Failed: Category not found.\");\r\n            return; // Dừng submit\r\n        }\r\n\r\n        // Lấy ID nếu tìm thấy\r\n        const categoryId = foundCategory.id;\r\n        console.log(`BookForm: Found Category ID: ${categoryId}`);\r\n\r\n        // --- Bước 3: Chuẩn bị dữ liệu (Payload) để gửi lên API ---\r\n        // Tạo object mới chỉ chứa các trường mà API backend mong đợi\r\n        const payload = {\r\n            title: formData.title.trim(), // Gửi dữ liệu đã trim\r\n            author: formData.author.trim() || null, // Gửi null nếu trống\r\n            isbn: formData.isbn.trim() || null,\r\n            publish_year: formData.publish_year ? Number(formData.publish_year) : null, // Đảm bảo là số hoặc null\r\n            publisher: formData.publisher.trim() || null,\r\n            category_id: categoryId, // <<< Gửi category ID đã tìm được\r\n            description: formData.description.trim() || null,\r\n            quantity: Number(formData.quantity), // Đảm bảo là số\r\n            price: Number(formData.price),       // Đảm bảo là số\r\n        };\r\n\r\n        console.log('BookForm: Prepared payload for submission:', payload);\r\n\r\n        // --- Bước 4: Gọi hàm onSubmit được truyền từ component cha ---\r\n        // Truyền payload đã chuẩn bị cho component cha (BookManagementPage) xử lý việc gọi API\r\n        onSubmit(payload);\r\n    };\r\n\r\n    // --- Render JSX ---\r\n    return (\r\n        <form onSubmit={handleSubmit} style={{ marginBottom: '20px', padding: '15px', border: '1px solid #eee', borderRadius: '5px' }}>\r\n            {/* Tiêu đề form thay đổi tùy theo chế độ Add/Edit */}\r\n            <h3>{book ? 'Edit Book Information' : 'Add New Book'}</h3>\r\n\r\n            {/* Hiển thị lỗi validation của form này (nếu có) */}\r\n            {formValidationError && <p className=\"error-message\">{formValidationError}</p>}\r\n            {/* Hiển thị lỗi từ API submission (được truyền từ cha qua prop 'error') */}\r\n            {submissionError && <p className=\"error-message\">{submissionError}</p>}\r\n\r\n            {/* Grid layout cho các input */}\r\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '15px' }}>\r\n                {/* Title */}\r\n                <div>\r\n                    <label htmlFor=\"book-title\">Title:</label>\r\n                    <input id=\"book-title\" type=\"text\" name=\"title\" value={formData.title} onChange={handleChange} required disabled={loading} />\r\n                </div>\r\n                {/* Author */}\r\n                <div>\r\n                    <label htmlFor=\"book-author\">Author:</label>\r\n                    <input id=\"book-author\" type=\"text\" name=\"author\" value={formData.author} onChange={handleChange} disabled={loading} />\r\n                </div>\r\n                {/* Category Name */}\r\n                <div>\r\n                    <label htmlFor=\"book-category\">Category Name:</label>\r\n                    <input\r\n                        id=\"book-category\"\r\n                        type=\"text\"\r\n                        name=\"category_name\"\r\n                        value={formData.category_name}\r\n                        onChange={handleChange}\r\n                        required\r\n                        // Disable khi đang submit form HOẶC đang load categories\r\n                        disabled={loading || categoryLoading}\r\n                        placeholder=\"Enter existing category name\"\r\n                        list=\"category-suggestions\" // Liên kết với datalist gợi ý\r\n                        aria-describedby=\"category-help\" // Mô tả trợ giúp\r\n                    />\r\n                    {/* Datalist để gợi ý dựa trên internalCategories */}\r\n                    <datalist id=\"category-suggestions\">\r\n                        {internalCategories.map(cat => (\r\n                            <option key={cat.id} value={cat.name} />\r\n                        ))}\r\n                    </datalist>\r\n                    {/* Hiển thị trạng thái loading/error của categories */}\r\n                    {categoryLoading && <small style={{ display: 'block', marginTop: '3px', color: 'orange' }}> Loading categories...</small>}\r\n                    {!categoryLoading && categoryError && <small style={{ display: 'block', marginTop: '3px', color: 'red' }}> {categoryError}</small>}\r\n                    {!categoryLoading && !categoryError && internalCategories.length === 0 && <small style={{ display: 'block', marginTop: '3px', color: 'red' }}> No categories loaded.</small>}\r\n                    <small id=\"category-help\" style={{display: 'block', marginTop: '3px', color: '#555'}}>\r\n                        (Type to search, must match an existing category name)\r\n                     </small>\r\n                </div>\r\n                {/* Quantity */}\r\n                 <div>\r\n                    <label htmlFor=\"book-quantity\">Quantity:</label>\r\n                    <input id=\"book-quantity\" type=\"number\" name=\"quantity\" value={formData.quantity} onChange={handleChange} required min=\"0\" step=\"1\" disabled={loading} />\r\n                </div>\r\n                {/* Price */}\r\n                 <div>\r\n                    <label htmlFor=\"book-price\">Price:</label>\r\n                    <input id=\"book-price\" type=\"number\" name=\"price\" value={formData.price} onChange={handleChange} required min=\"0\" step=\"0.01\" disabled={loading} />\r\n                </div>\r\n                {/* ISBN */}\r\n                 <div>\r\n                    <label htmlFor=\"book-isbn\">ISBN:</label>\r\n                    <input id=\"book-isbn\" type=\"text\" name=\"isbn\" value={formData.isbn} onChange={handleChange} disabled={loading} />\r\n                </div>\r\n                {/* Publish Year */}\r\n                <div>\r\n                    <label htmlFor=\"book-publish-year\">Publish Year:</label>\r\n                    <input id=\"book-publish-year\" type=\"number\" name=\"publish_year\" value={formData.publish_year} onChange={handleChange} placeholder=\"YYYY\" disabled={loading} />\r\n                </div>\r\n                {/* Publisher */}\r\n                 <div>\r\n                    <label htmlFor=\"book-publisher\">Publisher:</label>\r\n                    <input id=\"book-publisher\" type=\"text\" name=\"publisher\" value={formData.publisher} onChange={handleChange} disabled={loading} />\r\n                </div>\r\n                {/* Description (chiếm toàn bộ chiều rộng) */}\r\n                <div style={{ gridColumn: '1 / -1' }}>\r\n                    <label htmlFor=\"book-description\">Description:</label>\r\n                    <textarea id=\"book-description\" name=\"description\" value={formData.description} onChange={handleChange} rows=\"3\" disabled={loading}></textarea>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Nút Submit và Cancel */}\r\n            <div style={{ marginTop: '20px' }}>\r\n                <button type=\"submit\" disabled={loading || categoryLoading || !!categoryError}> {/* Disable nếu form submit loading HOẶC category loading/error */}\r\n                    {loading ? 'Saving...' : (book ? 'Update Book' : 'Add Book')}\r\n                </button>\r\n                {/* Nút Cancel chỉ hiển thị khi ở chế độ Edit */}\r\n                {book &&\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"secondary\"\r\n                        onClick={onCancel} // Gọi hàm onCancel từ props\r\n                        disabled={loading} // Disable khi đang submit\r\n                        style={{ marginLeft: '10px' }}\r\n                    >\r\n                        Cancel Edit\r\n                    </button>\r\n                }\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default BookForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}